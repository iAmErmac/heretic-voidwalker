
class HVRMusicHandler : EventHandler
{
	override void WorldTick()
	{
		if(Level.Time && Level.Time % 100 == 0)
		{
			loadConfig();
			
			if(playRemastered)
				ChangeMusic();
			else
				ResetMusic();
		}
	}
	
	override void WorldLoaded(WorldEvent e)
	{	
		loadConfig();
		levelMusic = Level.Music;
		if(playRemastered) ChangeMusic();
	}
	
	void loadConfig()
	{
		Playerinfo player = players[consoleplayer];
		playRemastered = CVar.GetCVar("hvr_music", player).GetBool();
	}
	
	void ChangeMusic()
	{
		if(levelMusic.Length() > 0)
		{
			let soundtrack = levelMusic.MakeLower();
			
			for(int i = 0; i < heretic_sound_tracks.Size(); i++) {
				if(soundtrack == heretic_sound_tracks[i]) { //only try to replace default heretic soundtracks
					S_ChangeMusic("rmx" .. levelMusic.Mid(3));
				}
			}
		}
	}
	
	void ResetMusic()
	{
		S_ChangeMusic(levelMusic);
	}
	
	static const string heretic_sound_tracks[]  = {
		'mus_e1m1',
		'mus_e1m2',
		'mus_e1m3',
		'mus_e1m4',
		'mus_e1m5',
		'mus_e1m6',
		'mus_e1m7',
		'mus_e1m8',
		'mus_e1m9',
		'mus_e2m1',
		'mus_e2m2',
		'mus_e2m3',
		'mus_e2m4',
		'mus_e2m5',
		'mus_e2m6',
		'mus_e2m7',
		'mus_e2m8',
		'mus_e2m9',
		'mus_e3m2',
		'mus_e3m3',
		'mus_titl',
		'mus_intr',
		'mus_cptd'
	};
	
	String levelMusic;
	bool playRemastered;
}